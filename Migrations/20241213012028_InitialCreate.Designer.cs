// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesApp.Data;

#nullable disable

namespace MoviesApp.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20241213012028_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MoviesApp.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Christopher Nolan",
                            ReleaseDate = new DateOnly(2003, 1, 1),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Christopher Nolan",
                            ReleaseDate = new DateOnly(2008, 7, 18),
                            Title = "The Dark Knight"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Nitesh Tiwari",
                            ReleaseDate = new DateOnly(2016, 12, 18),
                            Title = "Dangal"
                        });
                });

            modelBuilder.Entity("MoviesApp.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Very good movie.",
                            MovieId = 1,
                            Rating = 8,
                            ReviewerName = "Taran Adarsh"
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Amazing visuals and story.",
                            MovieId = 1,
                            Rating = 6,
                            ReviewerName = "Bob"
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Best superhero movie ever!",
                            MovieId = 2,
                            Rating = 7,
                            ReviewerName = "Charlie"
                        });
                });

            modelBuilder.Entity("MoviesApp.Models.Review", b =>
                {
                    b.HasOne("MoviesApp.Models.Movie", "Movie")
                        .WithMany("Reviews")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesApp.Models.Movie", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
